---
- name:          Is IIM Installed?
  command:       "egrep {{ imgr_product_id }} $HOME/var/ibm/InstallationManager/installed.xml"
  register:      iim_already_installed

- name:          Is Product already Installed?
  command:       "egrep {{ was_product_id }} $HOME/var/ibm/InstallationManager/installed.xml"
  register:      version_already_installed
  ignore_errors: true

- name:          Cleanup Binaries directory
  file:          path={{ staging_dir }} state=absent
  when:          version_already_installed.rc != 0
  ignore_errors: true

#-  debug:       var=version_already_installed
- name:          Create Binaries directory
  file:          path={{ staging_dir }} state=directory mode=0755
  when:          version_already_installed.rc != 0

- name:          Create Logs directory
  file:          path={{ logs_dir }} state=directory mode=0755
  when:          version_already_installed.rc != 0

- name:          Download WAS V8.5.5 Files
  get_url:
    url:         "{{ ibm_repository_url }}/{{ item.bf }}"
    dest:        "{{ staging_dir }}/{{ item.bf }}"
    mode:        0755
  with_items:    "{{ was_zip_files }}"
  when:          version_already_installed.rc != 0

- name:          Extract WAS V8.5.5 Files
  unarchive:
    src:         "{{ staging_dir }}/{{ item.bf }}"
    dest:        "{{ staging_dir }}/"
    copy:        no
  with_items:    "{{ was_zip_files }}"
  when:          version_already_installed.rc != 0

- name:          Generate WAS Response file
  template:
    src:         "{{ was_install_tpl_file }}"
    dest:        "{{ was_install_rsp_file }}"
  when:          version_already_installed.rc != 0

- name:          Install IBM WAS Software
  command:
    chdir={{ staging_dir }}
    {{ imgr_install_location }}/eclipse/tools/imcl -acceptLicense -sVP -log {{ was_install_log_file }} input {{ was_install_rsp_file }}
  register:      cout
  changed_when:  ( cout.stdout.find( was_version_check ) != -1)
  when:          version_already_installed.rc != 0

#- debug:        var=cout

- name:          Cleanup Binaries directory
  file:          path={{ staging_dir }} state=absent
  when:          version_already_installed.rc != 0